/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  UserLogin as PrismaUserLogin,
  Role as PrismaRole,
} from "@prisma/client";

export class UserLoginServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.UserLoginCountArgs, "select">
  ): Promise<number> {
    return this.prisma.userLogin.count(args);
  }

  async userLogins<T extends Prisma.UserLoginFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLoginFindManyArgs>
  ): Promise<PrismaUserLogin[]> {
    return this.prisma.userLogin.findMany<Prisma.UserLoginFindManyArgs>(args);
  }
  async userLogin<T extends Prisma.UserLoginFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLoginFindUniqueArgs>
  ): Promise<PrismaUserLogin | null> {
    return this.prisma.userLogin.findUnique(args);
  }
  async createUserLogin<T extends Prisma.UserLoginCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLoginCreateArgs>
  ): Promise<PrismaUserLogin> {
    return this.prisma.userLogin.create<T>(args);
  }
  async updateUserLogin<T extends Prisma.UserLoginUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLoginUpdateArgs>
  ): Promise<PrismaUserLogin> {
    return this.prisma.userLogin.update<T>(args);
  }
  async deleteUserLogin<T extends Prisma.UserLoginDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.UserLoginDeleteArgs>
  ): Promise<PrismaUserLogin> {
    return this.prisma.userLogin.delete(args);
  }

  async getRole(parentId: string): Promise<PrismaRole | null> {
    return this.prisma.userLogin
      .findUnique({
        where: { id: parentId },
      })
      .role();
  }
}
