datasource db {
  provider = "mongodb"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Message {
  chatRoom   ChatRoom? @relation(fields: [chatRoomId], references: [id])
  chatRoomId String?   @db.ObjectId
  createdAt  DateTime  @default(now())
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  sender     String?
  sentAt     DateTime?
  text       String?
  updatedAt  DateTime  @updatedAt
  user       User?     @relation(fields: [userId], references: [id])
  userId     String?   @db.ObjectId
}

model ChatRoom {
  createdAt    DateTime      @default(now())
  createdBy    String?
  description  String?
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  messages     Message[]
  name         String?
  participants Participant[]
  updatedAt    DateTime      @updatedAt
  user         User?         @relation(fields: [userId], references: [id])
  userId       String?       @db.ObjectId
}

model Participant {
  chatRoom   ChatRoom?            @relation(fields: [chatRoomId], references: [id])
  chatRoomId String?              @db.ObjectId
  createdAt  DateTime             @default(now())
  id         String               @id @default(auto()) @map("_id") @db.ObjectId
  role       EnumParticipantRole?
  updatedAt  DateTime             @updatedAt
  user       User?                @relation(fields: [userId], references: [id])
  userId     String?              @db.ObjectId
}

model User {
  chatRooms    ChatRoom[]
  createdAt    DateTime      @default(now())
  email        String?       @unique
  firstName    String?
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  lastName     String?
  messages     Message[]
  participants Participant[]
  password     String
  roles        Json
  updatedAt    DateTime      @updatedAt
  username     String        @unique
}

enum EnumParticipantRole {
  Option1
}
